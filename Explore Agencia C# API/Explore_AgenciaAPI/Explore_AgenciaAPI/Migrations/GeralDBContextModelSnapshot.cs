// <auto-generated />
using System;
using Explore_AgenciaAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Explore_AgenciaAPI.Migrations
{
    [DbContext(typeof(GeralDBContext))]
    partial class GeralDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Continente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Pacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Cafe_manha")
                        .HasColumnType("bit");

                    b.Property<double>("Diaria")
                        .HasColumnType("float");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int?>("id_cidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_cidade");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cpf")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Password")
                        .HasColumnType("int");

                    b.Property<int?>("id_cargo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_cargo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Pacote", b =>
                {
                    b.HasOne("Explore_AgenciaAPI.Model.Cidade", "cidade")
                        .WithMany()
                        .HasForeignKey("id_cidade");

                    b.Navigation("cidade");
                });

            modelBuilder.Entity("Explore_AgenciaAPI.Model.Usuario", b =>
                {
                    b.HasOne("Explore_AgenciaAPI.Model.Cargo", "cargo")
                        .WithMany()
                        .HasForeignKey("id_cargo");

                    b.Navigation("cargo");
                });
#pragma warning restore 612, 618
        }
    }
}
